operator Chi0 : BS_chir0 -> Matrix_{m,1}.
operator Chi1 : BS_chir1 -> Matrix_{1,1}.

adversary Adv_LWE : (Matrix_{n,m+1} * Matrix_{m+1,1}) -> Bool.
assumption LWE
[ A <-$ Matrix_{n,m+1}; s <-$ Matrix_{n,1}; chir0 <-$ BS_chir0; chir1 <-$ BS_chir1; b <- Adv_LWE (A, (tr A) * s + tr (tr Chi0(chir0) || tr Chi1(chir1)));]
[ A <-$ Matrix_{n,m+1}; u <-$ Matrix_{m+1,1}; b <- Adv_LWE(A,u);].

adversary Adv : (Matrix_{1,m+m} * Matrix_{1, 1}) -> Bool.
operator Minj : Bool -> Matrix_{1,1}.
operator Rinj : BS_rinjr -> Matrix_{m,m}.
bound_adv [
  Au <-$ Matrix_{n,m+1};
  s <-$ Matrix_{n, 1};
  chir0 <-$ BS_chir0;
  chir1 <-$ BS_chir1;
  rinjr <-$ BS_rinjr;
  b <-$ Bool;
  b' <- Adv ((tr (Chi0(chir0)) + (tr (s) * sl (Au)))
              || ((tr (Chi0(chir0)) * Rinj(rinjr))
                  + (tr (s) * sl (Au) * Rinj(rinjr))),
              Minj(b) + tr (Chi1(chir1)) + (tr (s) * sr (Au)));
  
  let x = Rinj(rinjr);
  let z = ((tr (Au) * s) + tr (tr (Chi0(chir0)) || tr (Chi1 (chir1))));
  (*let a =  x * tr sl z || sr z;*)

  let z2 = sl tr z;

  
  ] : b=b'.
  assumption_decisional! LWE -> .

   (*
     
     
TODO ask charlie about this.
completeness issue:


Mat: could not deduce (tr (Chi0(chir0)) + (tr (s) * sl (Au)))
                      || ((tr (Chi0(chir0)) * Rinj(rinjr))
                          + (tr (s) * sl (Au) * Rinj(rinjr))) from 

x := Rinj(rinjr),
y := Au,
z := (tr (Au) * s) + tr ((tr (Chi0(chir0)) || tr (Chi1(chir1))))
    
what is the term I want?

sl tr z || ((sl tr z) * x);
     

 
*)